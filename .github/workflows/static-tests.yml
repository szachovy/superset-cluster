name: Static Tests

on:
  push:
    branches: '**'

jobs:
  setup:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10.12"

      - name: Install Python dependencies
        run: pip install --no-cache-dir --user pylint mypy flake8

      - name: Setup Terraform linter
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: v0.50.3

      - name: Add tflint to PATH
        run: echo "$HOME/.tflint/bin" >> $GITHUB_PATH

      - name: Initialize Terraform linter
        run: tflint --init
        working-directory: ./tests/setup

  run-markdown-lint:
    runs-on: self-hosted
    needs: setup
    steps:
      - name: Lint Markdown files
        uses: articulate/actions-markdownlint@v1
        with:
          version: "0.41.0"

  run-shell-check:
    runs-on: self-hosted
    needs: setup
    steps:
      - name: Lint shell scripts
        uses: ludeeus/action-shellcheck@master
        with:
          version: "v0.10.0"

  run-docker-hadolint:
    runs-on: self-hosted
    needs: setup
    steps:
      - name: Lint Dockerfiles
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
          recursive: true

  run-terraform-tflint:
    runs-on: self-hosted
    needs: setup
    steps:
      - name: Lint Terraform testing infrastructure
        run: tflint
        working-directory: ./tests/setup

  run-ansible-lint:
    runs-on: self-hosted
    needs: setup
    steps:
      - name: Lint ansible testing playbook
        uses: ansible/ansible-lint@main

  run-python-pylint:
    runs-on: self-hosted
    needs: setup
    steps:
      - name: Lint Python files with pylint
        run: "pylint $(find . -name '*.py')"

  run-python-mypy:
    runs-on: self-hosted
    needs: setup
    steps:
      - name: Lint Python files with mypy
        run: "mypy $(find . -name '*.py')"

  run-python-flake8:
    runs-on: self-hosted
    needs: setup
    steps:
      - name: Lint Python files with flake8
        run: "flake8"
  
  run-system-tests-coverage:
    runs-on: self-hosted
    needs: setup
    steps:
      - name: Get system tests coverage
        run: echo "COVERAGE=$(python3 .github/coverage.py)" >> $GITHUB_ENV
      - name: Generate badge
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: d4fd269e226b0ed70954f861129a2756
          filename: superset-cluster-codecoverage.json
          label: System Tests Coverage
          message: ${{ env.COVERAGE }}
          valColorRange: ${{ env.COVERAGE }}
          maxColorRange: 100
          minColorRange: 0

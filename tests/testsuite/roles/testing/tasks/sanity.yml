---
- name: "Check out nodes network"
  community.docker.docker_network_info:
    name: "{{ node_prefix }}-network"
  register: "network"
  failed_when: |
    (network.exists == false) or
    (network.network.Internal == true) or
    (network.network.Scope != 'local')

- name: "Check out nodes infrastructure settings"
  community.docker.docker_container_info:
    name: "{{ container.value['Name'] }}"
  loop: "{{ network.network.Containers | dict2items }}"
  loop_control:
    loop_var: "container"
  register: "node"
  failed_when: |
    (node.container.State.Running == false) or
    (container.value['Name'] != node.container.Config.Hostname) or
    (node.container.HostConfig.MemorySwap != 0) or
    (node.container.HostConfig.NetworkMode != 'bridge')

- name: "Check out passwordless ssh to the nodes"
  ansible.builtin.command: "ssh superset@{{ container.value['Name'] }} exit"
  loop: "{{ network.network.Containers | dict2items }}"
  loop_control:
    loop_var: "container"
  register: "ssh_command"
  changed_when: "ssh_command.rc != 0"

- name: "Check out internal nodes settings"
  community.docker.docker_container_exec:
    container: "{{ container.value['Name'] }}"
    command: "python3 -c 
      'import introspect;
      introspect.ContainerChecks(
        node_prefix=\"{{ node_prefix }}\",
        virtual_network_interface=\"{{ virtual_network_interface }}\"
      )'
      "
    chdir: "/opt/superset-testing"
  loop: "{{ network.network.Containers | dict2items }}"
  loop_control:
    loop_var: "container"
  register: "introspect_command"
  changed_when: "introspect_command.rc != 0"
---
- name: "run superset functional tests"
  community.docker.docker_container_exec:
    container: "{{ node_prefix }}-0"
    command: "python3 -c
      'import functional_superset;
      superset_functional = functional_superset.Superset(
        superset_container=\"{{ superset_container_name.stdout.strip() }}\",
        virtual_ip_address=\"{{ virtual_ip_address }}\"
      );
      query_dttm = superset_functional.run_query();
      superset_functional.get_query_results(query_dttm)'"
    chdir: "/opt/superset-cluster/src"

      # import functional_superset
      # superset_functional = functional_superset.Superset(virtual_ip_address="172.18.0.10");

- name: "run mgmt functional tests"
  community.docker.docker_container_exec:
    container: "{{ node_prefix }}-0"
    command: "python3 -c
      'import functional_mgmt;
      mgmt_functional = functional_mgmt.MgmtNodeFunctionalTests(
        virtual_ip_address=\"{{ virtual_ip_address }}\",
        node_prefix=\"{{ node_prefix }}\",
        after_disaster=False
      );'"
    chdir: "/opt/superset-cluster/src"

- name: Disaster testing - Stop Mgmt primary node
  community.docker.docker_container:
    name: "{{ node_prefix }}-0"
    state: stopped

- name: Disaster testing - Stop MySQL primary node
  community.docker.docker_container:
    name: "{{ node_prefix }}-2"
    state: stopped

- name: Wait for superset container to become healthy
  community.docker.docker_container_exec:
    container: "{{ node_prefix }}-0"
    command: |
      {% raw %}
      /bin/bash -c
      'superset_container_name=$(docker ps --filter "name=superset" --format "{{.Names}}")
      while [ "$(docker inspect --format "{{.State.Health.Status}}" $superset_container_name)" != "healthy" ]; do
        exit 1
      done
      echo $superset_container_name'
      {% endraw %}
  retries: 10
  delay: 60
  register: superset_container_name

- name: Print the superset container name
  debug:
    msg: "Superset container name is: {{ superset_container_name.stdout.strip() }}"

- name: "run mgmt functional tests after primary nodes disaster"
  community.docker.docker_container_exec:
    container: "{{ node_prefix }}-1"
    command: "python3 -c
      'import functional_mgmt;
      mgmt_functional = functional_mgmt.MgmtNodeFunctionalTests(
        virtual_ip_address=\"{{ virtual_ip_address }}\",
        node_prefix=\"{{ node_prefix }}\",
        after_disaster=True
      );
      mgmt_functional.check_after_disaster()'"
    chdir: "/opt/superset-cluster/src"
  retries: 6
  delay: 10

- name: "run superset functional tests"
  community.docker.docker_container_exec:
    container: "{{ node_prefix }}-0"
    command: "python3 -c
      'import functional_superset;
      superset_functional = functional_superset.Superset(
        superset_container=\"{{ superset_container_name.stdout.strip() }}\",
        virtual_ip_address=\"{{ virtual_ip_address }}\"
      );
      query_dttm = superset_functional.run_query();
      superset_functional.get_query_results(query_dttm)'"
    chdir: "/opt/superset-cluster/src"

---
services:
  initcontainer:
    build: "."
    image: "mysql-mgmt"
    user: "root"
    container_name: "mysql-mgmt-initcontainer"
    network_mode: "host"
    restart: "no"
    pull_policy: "always"
    entrypoint:
      - "/bin/bash"
      - "-c"
      - |
        set -euo pipefail
        export MYSQL_SUPERSET_PASSWORD=$(</run/secrets/mysql_superset_password)
        if ! mysqlsh --login-path="${PRIMARY_MYSQL_NODE}" --execute="dba.getCluster();"; then
          mysqlsh --login-path="${PRIMARY_MYSQL_NODE}" --execute="dba.configureInstance('${PRIMARY_MYSQL_NODE}')"
          mysqlsh --login-path="${SECONDARY_FIRST_MYSQL_NODE}" --execute="dba.configureInstance('${SECONDARY_FIRST_MYSQL_NODE}')"
          mysqlsh --login-path="${SECONDARY_SECOND_MYSQL_NODE}" --execute="dba.configureInstance('${SECONDARY_SECOND_MYSQL_NODE}')"
          mysqlsh --login-path="${PRIMARY_MYSQL_NODE}" --execute="dba.createCluster('superset');"
          mysqlsh --login-path="${SECONDARY_FIRST_MYSQL_NODE}" --sql --execute="RESET MASTER;"
          mysqlsh --login-path="${PRIMARY_MYSQL_NODE}" --execute="dba.getCluster('superset').addInstance('${SECONDARY_FIRST_MYSQL_NODE}',{recoveryMethod:'incremental'});"
          mysqlsh --login-path="${SECONDARY_SECOND_MYSQL_NODE}" --sql --execute="RESET MASTER;"
          mysqlsh --login-path="${PRIMARY_MYSQL_NODE}" --execute="dba.getCluster('superset').addInstance('${SECONDARY_SECOND_MYSQL_NODE}',{recoveryMethod:'incremental'});"
          export NODE_IP_ADDRESS=${VIRTUAL_IP_ADDRESS}
          /opt/envsubst-Linux-x86_64 < "/opt/superset_user.sql.tpl" > "/opt/superset_user.sql"
          mysqlsh --login-path="${PRIMARY_MYSQL_NODE}" --sql --file="/opt/superset_user.sql"
        fi
        export NODE_IP_ADDRESS=$(mysqlsh --python --execute "exec(open('/opt/interfaces.py').read())")
        /opt/envsubst-Linux-x86_64 < "/opt/superset_user.sql.tpl" > "/opt/superset_user.sql"
        mysqlsh --login-path="${PRIMARY_MYSQL_NODE}" --sql --file="/opt/superset_user.sql"
        mysqlrouter --user "superset" --bootstrap "superset:$(cat /run/secrets/mysql_superset_password)@${PRIMARY_MYSQL_NODE}:3306" --directory "/opt/default/mysql_router" --conf-use-sockets --client-ssl-mode="REQUIRED" --server-ssl-mode="REQUIRED" --ssl-ca="/opt/default/superset_cluster_ca_certificate.pem" --client-ssl-cert="/opt/default/mysql_router_certificate.pem" --client-ssl-key="/opt/default/mysql_router_key.pem"
        mysqlsh --login-path="${PRIMARY_MYSQL_NODE}" --sql --execute="DROP USER 'superset'@'$(mysqlsh --python --execute "exec(open('/opt/interfaces.py').read())")';"
        ifmetric ${VIRTUAL_NETWORK_INTERFACE} 2
        /opt/envsubst-Linux-x86_64 < "/opt/keepalived.conf.tpl" > "/opt/default/keepalived.conf";
        chown --recursive superset:superset "/opt/default"
    cap_add:
      - "NET_ADMIN"
    environment:
      - VIRTUAL_IP_ADDRESS=${VIRTUAL_IP_ADDRESS}
      - VIRTUAL_NETWORK_MASK=${VIRTUAL_NETWORK_MASK}
      - VIRTUAL_NETWORK_INTERFACE=${VIRTUAL_NETWORK_INTERFACE}
      - VIRTUAL_NETWORK=${VIRTUAL_NETWORK}
      - STATE=${STATE}
      - PRIORITY=${PRIORITY}
      - MYSQL_TEST_LOGIN_FILE=/opt/.mylogin.cnf
    volumes:
      - "default_generated:/opt/default"
      - "/opt/superset-cluster/mysql-mgmt/superset_cluster_ca_certificate.pem:/opt/default/superset_cluster_ca_certificate.pem"
      - "/opt/superset-cluster/mysql-mgmt/mysql_router_certificate.pem:/opt/default/mysql_router_certificate.pem"
      - "/opt/superset-cluster/mysql-mgmt/mysql_router_key.pem:/opt/default/mysql_router_key.pem"
      - "/opt/superset-cluster/mysql-mgmt/.mylogin.cnf:/opt/.mylogin.cnf"
    secrets:
      - mysql_superset_password

  maincontainer:
    image: "mysql-mgmt"
    user: "superset"
    entrypoint:
      - "/bin/bash"
      - "-c"
      - |
        set -euo pipefail
        sudo keepalived --use-file "/opt/default/keepalived.conf"
        sleep ${HEALTHCHECK_START_PERIOD}
        mysqlrouter --config "/opt/default/mysql_router/mysqlrouter.conf"
    container_name: "mysql-mgmt"
    restart: "always"
    network_mode: "host"
    healthcheck:
      test: ["CMD", "sh", "-c", "[ $(pgrep -c mysqlrouter) -eq 1 ] && [ $(pgrep -c keepalived) -eq 2 ]"]
      interval: "${HEALTHCHECK_INTERVAL}s"
      timeout: "5s"
      retries: "${HEALTHCHECK_RETRIES}"
      start_period: "${HEALTHCHECK_START_PERIOD}s"
    cap_add:
      - "NET_ADMIN"
    volumes:
      - "default_generated:/opt/default"
      - "/opt/superset-cluster/mysql-mgmt/superset_cluster_ca_certificate.pem:/opt/default/superset_cluster_ca_certificate.pem"
      - "/opt/superset-cluster/mysql-mgmt/mysql_router_certificate.pem:/opt/default/mysql_router_certificate.pem"
      - "/opt/superset-cluster/mysql-mgmt/mysql_router_key.pem:/opt/default/mysql_router_key.pem"

volumes:
  default_generated:

secrets:
  mysql_superset_password:
    file: /opt/superset-cluster/mysql-mgmt/mysql_superset_password
